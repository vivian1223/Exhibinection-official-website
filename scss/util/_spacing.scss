//margin
@each $name in $margin-name {
    .m-#{$name}{
        margin: $spacer * map-get($margin-base, $name);
    }
};

@each $direction in $margin-direction {
    @each $name in $margin-name {
        .m#{$direction}-#{$name}{
            margin-#{map-get($margin-direction-base, $direction)}: $spacer *  map-get($margin-base, $name);
        }
    }
}
//padding

@each $name in $padding-name {
    .p-#{$name}{
        padding: $spacer * map-get($padding-base, $name);
    }
};


@each $direction in $padding-direction {
    @each $padding  in $padding-name {
        .p#{$direction}-#{$padding }{
            padding-#{map-get($padding-direction-base, $direction)}: $spacer *  map-get($padding-base, $padding );
        }
    }
}
//padding with breakpoints
@each $name in $break-points-list{
    @media (max-width:map-get($break-points-map,$name )){
        @each $padding in $padding-name {
    .p-#{$name}-#{$padding}{
        padding: $spacer * map-get($padding-base, $padding);
    }
    }
    
};
}

//padding with breakpoints

    @each $direction in $padding-direction {
        @each $name in $break-points-list{
            @media(max-width:map-get($break-points-map,$name )){
                @each $padding  in $padding-name {
                    .p#{$direction}-#{$name}-#{$padding }{
                        padding-#{map-get($padding-direction-base, $direction)}: $spacer *  map-get($padding-base, $padding );
                    }
                }
            }
    }  
}



@include mobile{
    .mx-auto-sm{
        margin: 0 auto;
    }
}


//width
@each $name in $width-name {
    .w-#{$name}{
        max-width: $width-spacer * $name;
    }
}

//height 

@each $name in $height-name {
    .h-#{$name}{
        max-height: $height-spacer *$name;
    }
}
